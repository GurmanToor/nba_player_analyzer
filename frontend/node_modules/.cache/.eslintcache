[{"/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/index.js":"1","/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/App.js":"2","/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/reportWebVitals.js":"3","/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/NavBar.js":"4","/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/components/groupTable.js":"5","/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/components/AllPlayers.js":"6","/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/components/HeadtoHead.jsx":"7","/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/components/PlayerCard.jsx":"8","/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/components/columnsAP.js":"9","/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/csv_json_convert.js":"10","/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/components/SearchBar.jsx":"11","/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/components/GroupHeader.js":"12","/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/components/createGroupModal.js":"13","/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/data/players_20-21-.js":"14","/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/data/new_data-20-21.js":"15","/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/data/uncleaned_players_19-20.js":"16","/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/data/uncleaned_players_18-19.js":"17"},{"size":500,"mtime":1635021982711,"results":"18","hashOfConfig":"19"},{"size":1183,"mtime":1637218413415,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1635021982712,"results":"21","hashOfConfig":"19"},{"size":372,"mtime":1635277952221,"results":"22","hashOfConfig":"19"},{"size":2362,"mtime":1637218396464,"results":"23","hashOfConfig":"19"},{"size":5397,"mtime":1637218040663,"results":"24","hashOfConfig":"19"},{"size":1200,"mtime":1637216383712,"results":"25","hashOfConfig":"19"},{"size":4086,"mtime":1637216383713,"results":"26","hashOfConfig":"19"},{"size":378,"mtime":1635969025879,"results":"27","hashOfConfig":"19"},{"size":722,"mtime":1636658843563,"results":"28","hashOfConfig":"19"},{"size":2346,"mtime":1637216383714,"results":"29","hashOfConfig":"19"},{"size":609,"mtime":1636662584475,"results":"30","hashOfConfig":"19"},{"size":1063,"mtime":1636664226461,"results":"31","hashOfConfig":"19"},{"size":244036,"mtime":1636995442400,"results":"32","hashOfConfig":"19"},{"size":176229,"mtime":1636995742944,"results":"33","hashOfConfig":"19"},{"size":248387,"mtime":1637216383717,"results":"34","hashOfConfig":"19"},{"size":248082,"mtime":1637216383715,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1paiswu",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/index.js",[],["74","75"],"/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/App.js",["76","77"],"/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/reportWebVitals.js",[],"/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/NavBar.js",[],"/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/components/groupTable.js",["78","79"],"/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/components/AllPlayers.js",["80","81"],"import React, { useState, useMemo } from \"react\";\nimport \"./AllPlayers.css\";\nimport NavBar from \"../NavBar\";\nimport Modal from \"./createGroupModal\";\nimport { players } from \"../data/players_20-21-\";\nimport { player_data } from \"../data/new_data-20-21\";\nimport { useTable } from \"react-table\";\n// import nba_player_data_20-21-- from \"./nba_player_data_20-21--.json\"\nimport { COLUMNS } from \"./columnsAP\";\nimport \"./resetButton.css\";\nimport \"./sortButton.css\";\nimport csvJSON from \"../csv_json_convert\";\nconst groupData = require(\"../data/groupDataFake.json\");\n\n// import \"../nba_player_data_20-21.csv\";\n\n// Importing React-Table : https://www.bacancytechnology.com/blog/react-table-tutorial-part-1/#4\n// TABLE TUTORIAL: https://www.youtube.com/watch?v=hson9BXU9F8\n// CSV TO JSON Convertor: https://www.convertcsv.com/csv-to-json.htm\n\nconst AllPlayers = () => {\n  // Get checkboxes\n  function getSelectedCheckboxItems(name) {\n    let values = [];\n    // grabs all checkboxes that are checked\n    const checkboxes = document.querySelectorAll(\n      `input[name=\"${name}\"]:checked`\n    );\n    checkboxes.forEach((checkbox) => {\n      values.push(checkbox);\n    });\n    // returns arrays of all checkboxes that are checked\n    return values;\n  }\n\n  function dropDown() {\n    // document.getElementById(\"myDropdown\").classList.toggle(\"show\");\n  }\n\n  // Get data from checkboxes\n  const showCheckBoxData = () => {\n    console.log(\"hello\");\n    let vals = getSelectedCheckboxItems(\"itemCheckbox\");\n    // console.log(vals[0].getAttribute(\"data\"));\n    let objects = [];\n    if (vals.length !== 0) {\n      for (let i = 0; i < vals.length; i++) {\n        let str_data = vals[i].getAttribute(\"data\");\n        let obj_data = JSON.parse(str_data);\n        objects.push(obj_data);\n      }\n    }\n    if (objects.length !== 0) {\n      console.log(objects);\n      alert(\n        \"There are \" +\n          objects.length.toString() +\n          \" players selected and \" +\n          objects[0].Player +\n          \" is the First Player Selected!\"\n      );\n\n      for (let i = 0; i < objects.length; i++) {\n        // adds the objects to the MyFridge and deletes it from shopping list\n        groupData.push(objects[i]);\n      }\n\n      console.log(groupData);\n\n      return objects;\n    }\n  };\n\n  // Select All Checkboxes\n  function toggle(source, name) {\n    let checkboxes = document.querySelectorAll(`input[name=\"${name}\"]`);\n    let input = document.querySelectorAll(`input[name=\"${source}\"]`)[0];\n    checkboxes.forEach((checkbox) => {\n      if (checkbox.checked !== input.checked) {\n        checkbox.checked = input.checked;\n      }\n    });\n  }\n  // show Modals\n  const [show, setShow] = useState(false);\n\n  // Creating React-Table\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => player_data, []);\n\n  const tableInstance = useTable({\n    columns,\n    data,\n  });\n\n  const {\n    // getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = tableInstance;\n\n  return (\n    <div>\n      <button onClick={() => setShow(true)} className={\"createGroup-button\"}>\n        {\" \"}\n        Show create modal\n      </button>\n      <Modal onClose={() => setShow(false)} show={show} />\n\n      <button onClick={showCheckBoxData}>Click</button>\n      {/* <button\n        onClick={() => console.log('her')} \n        className={\"reset-button\"}\n      >Reset</button> */}\n      <button onClick={dropDown()} className=\"sort-button allPlayers\">\n        <span className=\"text\">Sort By Stat</span>\n        <span className=\"arrow-up\" />\n        <span className=\"arrow-down\" />\n      </button>\n      {/* <div className=\"dropdown-content\" id=\"myDropdown\">\n        <a href=\"#\">Points</a>\n        <a href=\"#\">Rebounds</a>\n        <a href=\"#\">Assists</a>\n      </div> */}\n      <table {...getTableBodyProps} className=\"whole-table\">\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              <input\n                type=\"checkbox\"\n                name=\"selectAll\"\n                // Selects all items\n                onClick={() => toggle(\"selectAll\", \"itemCheckbox\")}\n              ></input>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps}>\n          {rows.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                <input\n                  type=\"checkbox\"\n                  name=\"itemCheckbox\"\n                  data={JSON.stringify(row.values)}\n                ></input>\n                {/* {console.log(row.original)} */}\n                {/* {console.log(row.values[\"Player\"])} */}\n                {row.cells.map((cell) => {\n                  // console.log(cell.render(\"Cell\"));\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\n// the home page with the items and the stuff at the bottom\nconst Home = () => (\n  <div>\n    <NavBar />\n    <header>\n      <h1>Welcome to All Players</h1>\n\n      <AllPlayers />\n    </header>\n  </div>\n);\n\nexport { AllPlayers, Home };\n","/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/components/HeadtoHead.jsx",[],"/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/components/PlayerCard.jsx",["82"],"import { player_data } from \"../data/new_data-20-21\";\nimport { onePrevPlayers } from \"../data/uncleaned_players_19-20\";\nimport { twoPrevPlayers } from \"../data/uncleaned_players_18-19\";\nimport \"./PlayerCard.css\";\nimport { useState } from \"react\";\n\nfunction PlayerCard(props) {\n\n  //Take input player ID as current playerCard to display\n  const player = player_data[props.player];\n  \n  //Find the index of this player\n  const onePrevIndex = onePrevPlayers.findIndex(obj => obj.Player === player.Player);\n  const twoPrevIndex = twoPrevPlayers.findIndex(obj => obj.Player = player.Player);\n\n  //Use index to find correct player object\n  const onePrevPlayer = onePrevPlayers[onePrevIndex];\n  const twoPrevPlayer = twoPrevPlayers[twoPrevIndex];\n\n  console.log(\"player\", player);\n  console.log(\"oneprev\", onePrevPlayer);\n  console.log(\"twoprev\", twoPrevPlayer);\n\n  //Parse name string to get first and last name as separate strings\n  const playerName = player.Player.split(\" \");\n  const playerFirstName = playerName[0];\n  const playerLastName = playerName[1];\n\n  const playerData = initializeValues(player);\n  const onePrevPlayerData = initializeValues(onePrevPlayer);\n  const twoPrevPlayerData = initializeValues(twoPrevPlayer);\n\n  function initializeValues(player) {\n    let dataArray = [];\n    //If player exists, produce values\n    if (player){\n      const divideFTM = (player.FT / player.FTA).toFixed(2);\n      const divideFGM = (player.FG / player.FGA).toFixed(2);\n  \n      dataArray = [\n        { \"FGM/A\": divideFGM },\n        { \"FG%\": player.FG.toFixed(2) },\n        { \"FTM/A\": divideFTM },\n        { \"FT%\": player.FT.toFixed(2) },\n        { \"STL\": player.STL.toFixed(2) },\n        { PTS: player.PTS.toFixed(2) },\n        { REBS: player.TRB.toFixed(2) },\n        { AST: player.AST.toFixed(2) },\n      ];\n    }\n    //Otherwise, just produce NaN values for everything\n    else{\n      dataArray = [\n        { \"FGM/A\": \"NaN\" },\n        { \"FG%\": \"NaN\" },\n        { \"FTM/A\": \"NaN\" },\n        { \"FT%\": \"NaN\" },\n        { \"STL\": \"NaN\" },\n        { PTS: \"NaN\" },\n        { REBS: \"NaN\" },\n        { AST: \"NaN\" },\n      ];\n    }\n    console.log(dataArray);\n    return dataArray;\n  }\n\n\n  //I'm lazy right now, so this is iterating values for current season\n  const iterateCurrent = playerData.map((value, key) => {\n    return (\n      <div>\n        {Object.keys(value).map((val, k) => (\n          <div className=\"number\" k={k}>\n            {value[val]}\n          </div>\n        ))}\n      </div>\n    );\n  });\n\n  //I'm lazy right now, so this is iterating values for one year previous\n  const iterateOneYearPrev = onePrevPlayerData.map((value, key) => {\n    return (\n      <div>\n        {Object.keys(value).map((val, k) => (\n          <div className=\"number\" k={k}>\n            {value[val]}\n          </div>\n        ))}\n      </div>\n    );\n  });\n\n  //I'm lazy right now, so this is iterating values for two years previous\n  const iterateTwoYearPrev = twoPrevPlayerData.map((value, key) => {\n    return (\n      <div>\n        {Object.keys(value).map((val, k) => (\n          <div className=\"number\" k={k}>\n            {value[val]}\n          </div>\n        ))}\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"whole-card\">\n      <div className=\"player-name\">\n          <div className=\"first\">{playerFirstName}</div>\n          <div className=\"last\">{playerLastName}</div>\n      </div>\n      <div className=\"card-box\">\n        <div className=\"data-labels\">\n          <p className=\"light\">FGM/A</p>\n          <p>FG%</p>\n          <p className=\"light\">FTM/A</p>\n          <p>FT%</p>\n          <p>STL</p>\n          <p>PTS</p>\n          <p>REBS</p>\n          <p>AST</p>\n        </div>\n        <div className=\"time-label\">2020-2021 Season</div>\n        <div className=\"data-row\">{iterateCurrent}</div>\n        <div className=\"time-label\">2019-2020 Season</div>\n        <div className=\"data-row\">{iterateOneYearPrev}</div>\n        <div className=\"time-label\">2018-2019 Season</div>\n        <div className=\"data-row\">{iterateTwoYearPrev}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default PlayerCard;\n","/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/components/columnsAP.js",[],"/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/csv_json_convert.js",[],"/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/components/SearchBar.jsx",["83","84"],"import { useState } from \"react\";\nimport React from \"react\";\nimport \"./SearchBar.css\";\nimport searchicon from \"../assets/searchicon.png\"\n\nfunction Search({ placeholder, data, updatePlayer}){\n    //filteredData based off of search word\n    const [filteredData, setFilteredData] = useState([]);\n    //search word\n    const [wordEntered, setWordEntered] = useState(\"\");\n  \n    const handleFilter = (event) => {\n      const searchWord = event.target.value;\n      setWordEntered(searchWord);\n      const newFilter = data.filter((value) => {\n        return value.Player.toLowerCase().includes(searchWord.toLowerCase());\n      });\n\n      //If empty searchbar, then set filteredData to empty array\n      if (searchWord === \"\") {\n        setFilteredData([]);\n      } else {\n        //Otherwise, setFilteredData based off of newFilter return\n        console.log('newFilter', newFilter);\n        setFilteredData(newFilter);\n      }\n    };\n\n    const clearInput = () => {\n      setFilteredData([]);\n      setWordEntered(\"\");\n    };\n\n    //Select player from dropdown list and filteredData\n    function selectPlayer(value){\n      let index = data.findIndex( element => {\n          if (element.Player === value.Player) {\n              return true;\n          }\n        });\n        //Send the index of the player selected up to parent component\n        //Index is used to keep track of player\n        updatePlayer(index);\n        console.log(value.Player + 'is at index: ' + index);\n        //After selecting value, clear input/searchbar\n        clearInput();\n    }\n\n    return(\n        <div>\n            <div className=\"search-group\">\n                <input\n                    type=\"text\"\n                    placeholder={placeholder}\n                    value={wordEntered}\n                    onChange={handleFilter}\n                    className=\"searchbar\"\n                />\n                <img className=\"search-icon\" src={searchicon} />\n            </div>\n            {/* <Button onClick={clearInput}></Button> */}\n            <div>\n            <div className=\"filtered-list\">\n                {filteredData.map((value, key) => (\n                    <button className=\"player-option\" onClick={(event) => selectPlayer(value)}>{value.Player}</button>\n                ))}\n            </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Search;","/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/components/GroupHeader.js",[],"/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/components/createGroupModal.js",[],"/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/data/players_20-21-.js",[],"/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/data/new_data-20-21.js",[],"/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/data/uncleaned_players_19-20.js",[],"/Users/alexhu/Documents/Senior_Year_Classes/Remote_Collabs/nba_player_analyzer/frontend/src/data/uncleaned_players_18-19.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":5,"column":8,"nodeType":"91","messageId":"92","endLine":5,"endColumn":13},{"ruleId":"89","severity":1,"message":"93","line":6,"column":10,"nodeType":"91","messageId":"92","endLine":6,"endColumn":20},{"ruleId":"89","severity":1,"message":"94","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":17},{"ruleId":"95","severity":1,"message":"96","line":24,"column":42,"nodeType":"97","endLine":24,"endColumn":44,"suggestions":"98"},{"ruleId":"89","severity":1,"message":"94","line":5,"column":10,"nodeType":"91","messageId":"92","endLine":5,"endColumn":17},{"ruleId":"89","severity":1,"message":"99","line":12,"column":8,"nodeType":"91","messageId":"92","endLine":12,"endColumn":15},{"ruleId":"89","severity":1,"message":"100","line":5,"column":10,"nodeType":"91","messageId":"92","endLine":5,"endColumn":18},{"ruleId":"101","severity":1,"message":"102","line":36,"column":43,"nodeType":"103","messageId":"104","endLine":36,"endColumn":45},{"ruleId":"105","severity":1,"message":"106","line":59,"column":17,"nodeType":"107","endLine":59,"endColumn":65},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'AllPlayers' is defined but never used.","'players' is defined but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'props.data'. Either include it or remove the dependency array.","ArrayExpression",["110"],"'csvJSON' is defined but never used.","'useState' is defined but never used.","array-callback-return","Array.prototype.findIndex() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},"Update the dependencies array to be: [props.data]",{"range":"113","text":"114"},[930,932],"[props.data]"]